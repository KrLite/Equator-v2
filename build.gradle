plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

archivesBaseName = "${project.archives_base_name}-${project.minecraft_version}"
version = project.mod_version
group = project.maven_group

repositories {
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Mixbox
	implementation include("com.scrtwpns:mixbox:${project.mixbox_version}")

	// Word Wrap
	implementation include("com.github.davidmoten:word-wrap:${project.word_wrap_version}")
	implementation include("com.github.davidmoten:guava-mini:${project.guava_mini_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = Integer.parseInt(sourceCompatibility)
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

tasks.register('collectJars', Copy) {
	group = 'build'

	def destinationFolder = file("$buildDir/libs/latest")

	from("$buildDir/libs/${base.archivesBaseName}-${project.version}.jar")
	from("$buildDir/libs/${base.archivesBaseName}-${project.version}-sources.jar")

	subprojects { subproject ->
		from("$subproject.buildDir/libs/${subproject.archivesBaseName}-${project.version}.jar")
		from("$subproject.buildDir/libs/${subproject.archivesBaseName}-${project.version}-sources.jar")
	}

	into(destinationFolder)
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
